http://scholar.google.com/scholar?q=A+Bandwidth-efficient+Architecture+for+Media+Processing.
http://scholar.google.com/scholar?q=Exploiting+Instruction+Level+Parallelism+in+Geometry+Processing+for+Three+Dimensional+Graphics+Applications.
http://scholar.google.com/scholar?q=Simple+Vector+Microprocessors+for+Multimedia+Applications.
http://scholar.google.com/scholar?q=Evaluating+MMX+Technology+Using+DSP+and+Multimedia+Applications.
http://scholar.google.com/scholar?q=Analyzing+the+Working+Set+Characteristics+of+Branch+Execution.
http://scholar.google.com/scholar?q=Dataflow+Analysis+of+Branch+Mispredictions+and+Its+Application+to+Early+Resolution+of+Branch+Outcomes.
http://scholar.google.com/scholar?q=The+YAGS+Branch+Prediction+Scheme.
http://scholar.google.com/scholar?q=Task+Selection+for+a+Multiscalar+Processor.
http://scholar.google.com/scholar?q=Split-path+Enhanced+Pipeline+Scheduling+for+Loops+with+Control+Flows.
http://scholar.google.com/scholar?q=Effective+Cluster+Assignment+for+Modulo+Scheduling.
http://scholar.google.com/scholar?q=Better+Global+Scheduling+Using+Path+Profiles.
http://scholar.google.com/scholar?q=Predictive+Techniques+for+Aggressive+Load+Speculation.
http://scholar.google.com/scholar?q=Compiler-Directed+Early+Load-Address+Generation.
http://scholar.google.com/scholar?q=Load+Latency+Tolerance+in+Dynamically+Scheduled+Processors.
http://scholar.google.com/scholar?q=Improving+I%2FO+Performance+with+a+Conditional+Store+Buffer.
http://scholar.google.com/scholar?q=Putting+the+Fill+Unit+to+Work%3A+Dynamic+Optimizations+for+Trace+Cache+Microprocessors.
http://scholar.google.com/scholar?q=Cooperative+Prefetching%3A+Compiler+and+Hardware+Support+for+Effective+Instruction+Prefetching+in+Modern+Processors.
http://scholar.google.com/scholar?q=Code+Compression+Based+on+Operand+Factorization.
http://scholar.google.com/scholar?q=Understanding+the+Differences+Between+Value+Prediction+and+Instruction+Reuse.
http://scholar.google.com/scholar?q=A+Novel+Renaming+Scheme+to+Exploit+Value+Temporal+Locality+Through+Physical+Register+Reuse+and+Unification.
http://scholar.google.com/scholar?q=A+Dynamic+Multithreading+Processor.
http://scholar.google.com/scholar?q=Widening+Resources%3A+A+Cost-effective+Technique+for+Aggressive+ILP+Architectures.
http://scholar.google.com/scholar?q=The+Cascaded+Predictor%3A+Economical+and+Adaptive+Branch+Target+Prediction.
http://scholar.google.com/scholar?q=Improving+Prediction+for+Procedure+Returns+with+Return-address-stack+Repair+Mechanisms.
http://scholar.google.com/scholar?q=Predicting+Indirect+Branches+via+Data+Compression.
http://scholar.google.com/scholar?q=Improving+Locality+Using+Loop+and+Data+Transformations+in+an+Integrated+Framework.
http://scholar.google.com/scholar?q=Precise+Register+Allocation+for+Irregular+Architectures.
http://scholar.google.com/scholar?q=Unified+Assign+and+Schedule%3A+A+New+Approach+to+Scheduling+for+Clustered+Register+File+Microarchitectures.
